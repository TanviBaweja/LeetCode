/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        if (inorder.size()==0)
            return NULL;
        
        TreeNode* root= new TreeNode(*(postorder.end()-1));
        
        int index;
        for(index=0;index<inorder.size();index++)
            if(inorder[index]==root->val)
                break;
        
        vector<int> inleft(inorder.begin(),inorder.begin()+index);
        vector<int> postleft(postorder.begin(), postorder.begin()+index);
        root->left= buildTree(inleft, postleft);
        
        vector<int> inright(inorder.begin()+(index+1), inorder.end());
        vector<int> postright(postorder.begin()+index,postorder.end()-1);
        root->right=buildTree(inright, postright);
        
        return root;
        
    }
};
